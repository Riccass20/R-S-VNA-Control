#connecting to the VNA 
import tkinter as tk
from tkinter import ttk
import pyvisa 
import RsInstrument
from RsInstrument import *
import numpy

#############VNA CONNECTION#########################
VNA = 'USB0::0x0AAD::0x01E7::101242::INSTR'
####################################################
def VNA_connection():
    global vna
    try: 
        #rm = pyvisa.ResourceManager()
        #list = rm.list_resources()
        #print(f"Connected to {list}" )
        vna = RsInstrument(VNA)
        connection_label.config(text = f"Connected")
        connection_light.itemconfig(vna_light, fill = "green")
    except:
        connection_label.config(text = "Could not connect")
        connection_light.itemconfig(vna_light, fill = "red")
#############################################################
#Importing live feed interface##############################
def measu_setup():#Setting the #of points and the freq span
    startfreq = float(start_freq.get())
    Tr = float((Tr_input.get()))
    if ninety_ten: 
        BW = 0.35/(Tr)
    elif eighty_twenty:
        BW = 0.22/Tr
    else: 
        return False
    print(BW)
    sweep_pts = (BW+startfreq)/startfreq
    vna.write_with_opc("*RST")
    vna.write_with_opc(f"SWE:POIN {sweep_pts}")
    vna.write_with_opc(f"FREQ:STAR {startfreq};:FREQ:STOP {BW+startfreq}")#;FREQ:STOP {BW+startfreq}")
    vna.timeout=(50)
    freq = vna.query("FREQ:STAR?")
    endfreq1 = vna.query("FREQ:STOP?")
    startfreq = float(freq[0])
    endfreq = float(endfreq1)
    freq_label.config(text =f"Starting Freq is {startfreq}kHz\nThe Ending frequency is {endfreq} MHz")
    

#creating the interface
root = tk.Tk()
root.title("VNA Control")
###################VNA CONNECTION INTERFACE##################
connection_label = ttk.Label(root, text = "VNA Connection")
connection_label.grid(column = 2, row = 0, columnspan=2, pady = 10)

connection_light = tk.Canvas(root, width = 30, height = 30)
connection_light.grid(column = 4, row = 0)
vna_light = connection_light.create_oval(2, 2, 28, 28, fill = "gray")

connection_button = tk.Button(root, text = "Connect to VNA", command = VNA_connection)
connection_button.grid(column = 2, row = 1, columnspan=2, pady = 10)

connection_label = ttk.Label(root, text = "     ")
connection_label.grid(column = 5, row = 0, columnspan= 2, pady = 10)
##############################################################
##################MAKING SETUP BUTTON########################
start_freq = ttk.Entry(root)
start_freq.grid(column = 1, row = 2, columnspan=2, pady = 10)

setup_button = tk.Button(root, text = "Setup TDR", command = measu_setup)
setup_button.grid(column = 4, row = 2, columnspan=1, pady = 10)

freq_label = ttk.Label(root, text = "  ")
freq_label.grid(column = 5, row = 2, columnspan=2, pady = 10)

######## making a rise time input and rise time checkbox for either 10 - 90 0r 80-20#############
Tr_input = ttk.Entry(root)
Tr_input.grid(column = 1, row = 3, columnspan=2, pady = 10)

ninety_ten = tk.IntVar()
Tr_checkbox = tk.Checkbutton(root, text = "10-90", variable = ninety_ten)
Tr_checkbox.grid(column = 3, row = 3,columnspan=1, pady = 10)

eighty_twenty = tk.IntVar()
Tr_checkbox2 = tk.Checkbutton(root, text = "20-80", variable = eighty_twenty)
Tr_checkbox2.grid(column = 4, row = 3,columnspan=1, pady = 10)
##############################################################
####################Making display view button#################
#disp_button = tk.Button(root, text = "Setup TDR", command = window_disp)
#disp_button.grid(column = 2, row = 3, columnspan=2, pady = 10)

root.mainloop()
